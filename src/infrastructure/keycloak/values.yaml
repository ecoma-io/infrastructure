postgresql:
  fullnameOverride: postgresql
  architecture: standalone
  auth:
    username: keycloak  
    database: keycloak
    existingSecret: keycloak-secret
    secretKeys:
      adminPasswordKey: postgresql-admin-password
      userPasswordKey: postgresql-password
      replicationPasswordKey: postgresql-replication-password
  primary:    
    nodeSelector: 
      kubernetes.io/hostname: node1
    persistence:
      size: 1Gi
      storageClass: local-path
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 750m
        memory: 768Mi

keycloak:
  fullnameOverride: keycloak
  global:
    security:
      allowInsecureImages: true
  nodeSelector: 
    kubernetes.io/hostname: node1
  auth:
    adminUser: "admin"
    existingSecret: keycloak-secret
    passwordSecretKey: admin-password 
  postgresql:
    enabled: false
  externalDatabase:
    existingSecret: keycloak-secret  
    existingSecretHostKey: postgresql-host
    existingSecretPortKey: postgresql-port
    existingSecretUserKey: postgresql-username
    existingSecretDatabaseKey: postgresql-database
    existingSecretPasswordKey: postgresql-password
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 750m
      memory: 768Mi
  adminRealm: "ecoma"
  proxy: edge
  ingress:
    enabled: true
    ingressClassName: traefik
    hostname: accounts.ecoma.io
  adminIngress:
    enabled: true
    ingressClassName: traefik
    hostname: keycloak.ecoma.io   
  keycloakConfigCli:
    enabled: true
    image:
      repository: adorsys/keycloak-config-cli
      tag: 6.4.0-26
    command:
      - java
      - -jar
      - /app/target/keycloak-config-cli.jar
    cleanupAfterFinished:
      enabled: false
      seconds: 30
    extraEnvVars:
      - name: IMPORT_VARSUBSTITUTION_ENABLED
        value: "true" 
      - name: GOOGLE_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: keycloak-secret
            key: google-client-id
      - name: GOOGLE_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: keycloak-secret
            key: google-client-secret
      - name: GITHUB_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: keycloak-secret
            key: github-client-id
      - name: GITHUB_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: keycloak-secret
            key: github-client-secret
    configuration: 
      master.json: |
        {
          "id": "master",
          "realm": "master",
          "displayName": "Ecoma",
          "displayNameHtml": "",
          "notBefore": 0,
          "defaultSignatureAlgorithm": "RS256",
          "revokeRefreshToken": false,
          "refreshTokenMaxReuse": 0,
          "accessTokenLifespan": 300,
          "accessTokenLifespanForImplicitFlow": 900,
          "ssoSessionIdleTimeout": 1800,
          "ssoSessionMaxLifespan": 36000,
          "ssoSessionIdleTimeoutRememberMe": 0,
          "ssoSessionMaxLifespanRememberMe": 0,
          "offlineSessionIdleTimeout": 2592000,
          "offlineSessionMaxLifespanEnabled": false,
          "offlineSessionMaxLifespan": 5184000,
          "clientSessionIdleTimeout": 0,
          "clientSessionMaxLifespan": 0,
          "clientOfflineSessionIdleTimeout": 0,
          "clientOfflineSessionMaxLifespan": 0,
          "accessCodeLifespan": 60,
          "accessCodeLifespanUserAction": 300,
          "accessCodeLifespanLogin": 1800,
          "actionTokenGeneratedByAdminLifespan": 43200,
          "actionTokenGeneratedByUserLifespan": 300,
          "oauth2DeviceCodeLifespan": 600,
          "oauth2DevicePollingInterval": 5,
          "enabled": true,
          "sslRequired": "external",
          "registrationAllowed": true,
          "registrationEmailAsUsername": true,
          "rememberMe": true,
          "verifyEmail": true,
          "loginWithEmailAllowed": true,
          "duplicateEmailsAllowed": false,
          "resetPasswordAllowed": true,
          "editUsernameAllowed": false,
          "bruteForceProtected": false,
          "permanentLockout": false,
          "maxTemporaryLockouts": 0,
          "bruteForceStrategy": "MULTIPLE",
          "maxFailureWaitSeconds": 900,
          "minimumQuickLoginWaitSeconds": 60,
          "waitIncrementSeconds": 60,
          "quickLoginCheckMilliSeconds": 1000,
          "maxDeltaTimeSeconds": 43200,
          "failureFactor": 30,
          "roles": {
            "realm": [
              {
                "id": "3d8a3a08-30be-4d97-91ac-ee387c018f7c",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "ecoma",
                "attributes": {}
              },
              {
                "id": "439b85db-3202-453d-840d-7c52f576cf91",
                "name": "default-roles-ecoma",
                "description": "${role_default-roles}",
                "composite": true,
                "composites": {
                  "realm": [
                    "offline_access",
                    "uma_authorization"
                  ],
                  "client": {
                    "account": [
                      "view-profile",
                      "manage-account"
                    ]
                  }
                },
                "clientRole": false,
                "containerId": "ecoma",
                "attributes": {}
              },
              {
                "id": "7bf5d576-d412-4ecd-aae2-965740da01f0",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "ecoma",
                "attributes": {}
              },
              {
                "id": "ad92fe24-1c52-4049-b7a0-b83bc882273c",
                "name": "realm-admin",
                "composite": false,
                "clientRole": false,
                "containerId": "ecoma",
                "attributes": {}
              }
            ],
            "client": {
              "realm-management": [
                {
                  "id": "0c1e134b-c5f5-4f96-a741-e84ce9d8c46f",
                  "name": "manage-realm",
                  "description": "${role_manage-realm}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "f50e54da-e22f-4503-8104-9243e32613c0",
                  "name": "view-clients",
                  "description": "${role_view-clients}",
                  "composite": true,
                  "composites": {
                    "client": {
                      "realm-management": [
                        "query-clients"
                      ]
                    }
                  },
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "8238a157-5913-4bb2-98f4-ffc89be65433",
                  "name": "view-events",
                  "description": "${role_view-events}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "c9e05a6d-cae5-4428-b3b5-6c8b3854a1eb",
                  "name": "view-realm",
                  "description": "${role_view-realm}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "7a75cb1e-2238-450c-aaf6-4b2a2818f862",
                  "name": "manage-identity-providers",
                  "description": "${role_manage-identity-providers}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "ab7a1402-e920-4ad0-af59-c5a5165660e2",
                  "name": "view-authorization",
                  "description": "${role_view-authorization}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "13b42145-0caa-4864-8077-fb751b4a3a35",
                  "name": "query-clients",
                  "description": "${role_query-clients}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "48f37b66-270d-41ba-92b1-ea3b4eb7e3b6",
                  "name": "query-realms",
                  "description": "${role_query-realms}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "8b03e639-3fdf-4b32-ba74-023077b6a013",
                  "name": "manage-clients",
                  "description": "${role_manage-clients}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "8ac4d837-5852-4067-9c6c-a5e9a62bec33",
                  "name": "manage-authorization",
                  "description": "${role_manage-authorization}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "7d130eb6-9790-4b4c-8458-b501299704b0",
                  "name": "manage-events",
                  "description": "${role_manage-events}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "a0d44060-f427-4059-b0ba-87c4cdd97107",
                  "name": "create-client",
                  "description": "${role_create-client}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "4d1eccbc-0ca7-4ac2-a6f1-fc7d1373d27b",
                  "name": "view-identity-providers",
                  "description": "${role_view-identity-providers}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "28562b38-086c-4492-930f-a8d14205beb1",
                  "name": "manage-users",
                  "description": "${role_manage-users}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "6681b634-6fe4-46a6-bacf-d0db8261e91e",
                  "name": "query-groups",
                  "description": "${role_query-groups}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "6ebabcc7-cea0-4391-bbac-05e527f85107",
                  "name": "query-users",
                  "description": "${role_query-users}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "f79329c4-4087-49de-bfd5-ad4c932bf0a4",
                  "name": "realm-admin",
                  "description": "${role_realm-admin}",
                  "composite": true,
                  "composites": {
                    "client": {
                      "realm-management": [
                        "manage-realm",
                        "view-clients",
                        "view-events",
                        "view-realm",
                        "manage-identity-providers",
                        "view-authorization",
                        "query-clients",
                        "query-realms",
                        "manage-clients",
                        "manage-authorization",
                        "manage-events",
                        "create-client",
                        "view-identity-providers",
                        "manage-users",
                        "query-groups",
                        "query-users",
                        "view-users",
                        "impersonation"
                      ]
                    }
                  },
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "e49919b1-3581-4326-9683-bc8bff4aa70c",
                  "name": "view-users",
                  "description": "${role_view-users}",
                  "composite": true,
                  "composites": {
                    "client": {
                      "realm-management": [
                        "query-groups",
                        "query-users"
                      ]
                    }
                  },
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                },
                {
                  "id": "59dc9658-77dd-4fd1-ba61-22e5ff6770fd",
                  "name": "impersonation",
                  "description": "${role_impersonation}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "a99c3226-015f-4052-8554-20e408dc3c23",
                  "attributes": {}
                }
              ],
              "security-admin-console": [],
              "argocd": [
                {
                  "id": "ec91306c-d402-4b7e-b004-21b442d3536a",
                  "name": "uma_protection",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "d1c055d2-8e2f-4163-9338-edb6f00d6184",
                  "attributes": {}
                }
              ],
              "admin-cli": [],
              "account-console": [],
              "broker": [
                {
                  "id": "8fca0ab2-6bb7-4896-945e-36156609933a",
                  "name": "read-token",
                  "description": "${role_read-token}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "21d74f1c-7278-402d-990b-2312a8395e96",
                  "attributes": {}
                }
              ],
              "account": [
                {
                  "id": "f6eaddf4-018f-4804-b554-b6ca33be6f67",
                  "name": "view-profile",
                  "description": "${role_view-profile}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "d192f22d-cabc-47e9-a2a4-a9bae5a4a574",
                  "attributes": {}
                },
                {
                  "id": "11677448-8f8e-4af8-bf58-5b5a259f51eb",
                  "name": "delete-account",
                  "description": "${role_delete-account}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "d192f22d-cabc-47e9-a2a4-a9bae5a4a574",
                  "attributes": {}
                },
                {
                  "id": "711f6979-f85c-47d9-b773-361357fdcb1a",
                  "name": "manage-consent",
                  "description": "${role_manage-consent}",
                  "composite": true,
                  "composites": {
                    "client": {
                      "account": [
                        "view-consent"
                      ]
                    }
                  },
                  "clientRole": true,
                  "containerId": "d192f22d-cabc-47e9-a2a4-a9bae5a4a574",
                  "attributes": {}
                },
                {
                  "id": "f2699d53-dd80-4fa6-a5d9-9112a9bb3103",
                  "name": "view-applications",
                  "description": "${role_view-applications}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "d192f22d-cabc-47e9-a2a4-a9bae5a4a574",
                  "attributes": {}
                },
                {
                  "id": "1fcae149-e0e4-4e36-8e3d-9d41693948ac",
                  "name": "manage-account",
                  "description": "${role_manage-account}",
                  "composite": true,
                  "composites": {
                    "client": {
                      "account": [
                        "manage-account-links"
                      ]
                    }
                  },
                  "clientRole": true,
                  "containerId": "d192f22d-cabc-47e9-a2a4-a9bae5a4a574",
                  "attributes": {}
                },
                {
                  "id": "1b9f7013-b30b-4ac4-a7e7-7906cff9e178",
                  "name": "manage-account-links",
                  "description": "${role_manage-account-links}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "d192f22d-cabc-47e9-a2a4-a9bae5a4a574",
                  "attributes": {}
                },
                {
                  "id": "f73ce263-816c-47e9-bc50-a7fd91e6d990",
                  "name": "view-groups",
                  "description": "${role_view-groups}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "d192f22d-cabc-47e9-a2a4-a9bae5a4a574",
                  "attributes": {}
                },
                {
                  "id": "b7e4ae59-f9e9-48c0-b347-8e1c743ad6c0",
                  "name": "view-consent",
                  "description": "${role_view-consent}",
                  "composite": false,
                  "clientRole": true,
                  "containerId": "d192f22d-cabc-47e9-a2a4-a9bae5a4a574",
                  "attributes": {}
                }
              ]
            }
          },
          "groups": [
            {
              "id": "b9c3c35d-6255-4182-815f-538f6da4b713",
              "name": "argocd",
              "path": "/argocd",
              "subGroups": [
                {
                  "id": "bb931f90-7e6e-40ac-9907-97b19cb58781",
                  "name": "admin",
                  "path": "/argocd/admin",
                  "parentId": "b9c3c35d-6255-4182-815f-538f6da4b713",
                  "subGroups": [],
                  "attributes": {},
                  "realmRoles": [],
                  "clientRoles": {}
                }
              ],
              "attributes": {},
              "realmRoles": [],
              "clientRoles": {}
            }
          ],
          "defaultRole": {
            "id": "439b85db-3202-453d-840d-7c52f576cf91",
            "name": "default-roles-ecoma",
            "description": "${role_default-roles}",
            "composite": true,
            "clientRole": false,
            "containerId": "ecoma"
          },
          "requiredCredentials": [
            "password"
          ],
          "otpPolicyType": "totp",
          "otpPolicyAlgorithm": "HmacSHA1",
          "otpPolicyInitialCounter": 0,
          "otpPolicyDigits": 6,
          "otpPolicyLookAheadWindow": 1,
          "otpPolicyPeriod": 30,
          "otpPolicyCodeReusable": false,
          "otpSupportedApplications": [
            "totpAppFreeOTPName",
            "totpAppGoogleName",
            "totpAppMicrosoftAuthenticatorName"
          ],
          "localizationTexts": {},
          "webAuthnPolicyRpEntityName": "keycloak",
          "webAuthnPolicySignatureAlgorithms": [
            "ES256",
            "RS256"
          ],
          "webAuthnPolicyRpId": "",
          "webAuthnPolicyAttestationConveyancePreference": "not specified",
          "webAuthnPolicyAuthenticatorAttachment": "not specified",
          "webAuthnPolicyRequireResidentKey": "not specified",
          "webAuthnPolicyUserVerificationRequirement": "not specified",
          "webAuthnPolicyCreateTimeout": 0,
          "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
          "webAuthnPolicyAcceptableAaguids": [],
          "webAuthnPolicyExtraOrigins": [],
          "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
          "webAuthnPolicyPasswordlessSignatureAlgorithms": [
            "ES256",
            "RS256"
          ],
          "webAuthnPolicyPasswordlessRpId": "",
          "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
          "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
          "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
          "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
          "webAuthnPolicyPasswordlessCreateTimeout": 0,
          "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
          "webAuthnPolicyPasswordlessAcceptableAaguids": [],
          "webAuthnPolicyPasswordlessExtraOrigins": [],
          "scopeMappings": [
            {
              "clientScope": "offline_access",
              "roles": [
                "offline_access"
              ]
            }
          ],
          "clientScopeMappings": {
            "account": [
              {
                "client": "account-console",
                "roles": [
                  "manage-account",
                  "view-groups"
                ]
              }
            ]
          },
          "clients": [
            {
              "id": "d192f22d-cabc-47e9-a2a4-a9bae5a4a574",
              "clientId": "account",
              "name": "${client_account}",
              "rootUrl": "${authBaseUrl}",
              "baseUrl": "/realms/ecoma/account/",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
                "/realms/ecoma/account/*"
              ],
              "webOrigins": [],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": false,
              "publicClient": true,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "false",
                "post.logout.redirect.uris": "+"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": false,
              "nodeReRegistrationTimeout": 0,
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "roles",
                "offline_access",
                "organization",
                "microprofile-jwt"
              ]
            },
            {
              "id": "1b8ae1e0-ce5b-4644-801f-479b3f364cc6",
              "clientId": "account-console",
              "name": "${client_account-console}",
              "rootUrl": "${authBaseUrl}",
              "baseUrl": "/realms/ecoma/account/",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
                "/realms/ecoma/account/*"
              ],
              "webOrigins": [],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": false,
              "publicClient": true,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "false",
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": false,
              "nodeReRegistrationTimeout": 0,
              "protocolMappers": [
                {
                  "id": "37f0cca3-d2b5-4385-9ffc-36d3b5b675ec",
                  "name": "audience resolve",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-audience-resolve-mapper",
                  "consentRequired": false,
                  "config": {}
                }
              ],
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
              ]
            },
            {
              "id": "6c4cf276-aaa3-414d-90d2-530684accfa3",
              "clientId": "admin-cli",
              "name": "${client_admin-cli}",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [],
              "webOrigins": [],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": false,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": true,
              "serviceAccountsEnabled": false,
              "publicClient": true,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "false",
                "client.use.lightweight.access.token.enabled": "true",
                "post.logout.redirect.uris": "+"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": true,
              "nodeReRegistrationTimeout": 0,
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
              ]
            },
            {
              "id": "d1c055d2-8e2f-4163-9338-edb6f00d6184",
              "clientId": "argocd",
              "name": "ArgoCD",
              "description": "ArgoCD",
              "rootUrl": "",
              "adminUrl": "",
              "baseUrl": "",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
                "https://argocd.ecoma.io/*"
              ],
              "webOrigins": [
                "https://argocd.ecoma.io/*"
              ],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": false,
              "publicClient": true,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "false",
                "access.token.lifespan": "3600",
                "oidc.ciba.grant.enabled": "false",
                "backchannel.logout.session.required": "true",
                "post.logout.redirect.uris": "+",
                "display.on.consent.screen": "false",
                "oauth2.device.authorization.grant.enabled": "false",
                "use.jwks.url": "false",
                "backchannel.logout.revoke.offline.tokens": "false"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": true,
              "nodeReRegistrationTimeout": -1,
              "defaultClientScopes": [
                "profile",
                "groups",
                "email"
              ],
              "optionalClientScopes": []
            },
            {
              "id": "21d74f1c-7278-402d-990b-2312a8395e96",
              "clientId": "broker",
              "name": "${client_broker}",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [],
              "webOrigins": [],
              "notBefore": 0,
              "bearerOnly": true,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": false,
              "publicClient": false,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "true",
                "post.logout.redirect.uris": "+"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": false,
              "nodeReRegistrationTimeout": 0,
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
              ]
            },
            {
              "id": "a99c3226-015f-4052-8554-20e408dc3c23",
              "clientId": "realm-management",
              "name": "${client_realm-management}",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [],
              "webOrigins": [],
              "notBefore": 0,
              "bearerOnly": true,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": false,
              "publicClient": false,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "true",
                "post.logout.redirect.uris": "+"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": false,
              "nodeReRegistrationTimeout": 0,
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
              ]
            },
            {
              "id": "712af467-774a-4381-b4c5-ec4344a677ec",
              "clientId": "security-admin-console",
              "name": "${client_security-admin-console}",
              "rootUrl": "${authAdminUrl}",
              "baseUrl": "/admin/ecoma/console/",
              "surrogateAuthRequired": false,
              "enabled": true,
              "alwaysDisplayInConsole": false,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
                "/admin/ecoma/console/*"
              ],
              "webOrigins": [
                "+"
              ],
              "notBefore": 0,
              "bearerOnly": false,
              "consentRequired": false,
              "standardFlowEnabled": true,
              "implicitFlowEnabled": false,
              "directAccessGrantsEnabled": false,
              "serviceAccountsEnabled": false,
              "publicClient": true,
              "frontchannelLogout": false,
              "protocol": "openid-connect",
              "attributes": {
                "realm_client": "false",
                "client.use.lightweight.access.token.enabled": "true",
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
              },
              "authenticationFlowBindingOverrides": {},
              "fullScopeAllowed": true,
              "nodeReRegistrationTimeout": 0,
              "protocolMappers": [
                {
                  "id": "922bf025-775f-4d4c-a63d-520b4baafc8f",
                  "name": "locale",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "locale",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "locale",
                    "jsonType.label": "String"
                  }
                }
              ],
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "roles",
                "profile",
                "basic",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "organization",
                "microprofile-jwt"
              ]
            }
          ],
          "clientScopes": [
            {
              "id": "c6f69be3-02d9-4243-b200-ebb4d41e242d",
              "name": "role_list",
              "description": "SAML role list",
              "protocol": "saml",
              "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "753325e3-ba13-40b0-ae90-96d9c1f1685b",
                  "name": "role list",
                  "protocol": "saml",
                  "protocolMapper": "saml-role-list-mapper",
                  "consentRequired": false,
                  "config": {
                    "single": "false",
                    "attribute.nameformat": "Basic",
                    "attribute.name": "Role"
                  }
                }
              ]
            },
            {
              "id": "83bccca2-91b0-4942-a72d-1038b65bb195",
              "name": "service_account",
              "description": "Specific scope for a client enabled for service accounts",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
              },
              "protocolMappers": [
                {
                  "id": "88422e5b-4154-4b4c-a569-fcb3d17713c5",
                  "name": "Client IP Address",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "clientAddress",
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "clientAddress",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "0c8fe73f-3e4e-424e-a195-f71004eec6eb",
                  "name": "Client ID",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "client_id",
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "client_id",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "847627af-bfa1-4e13-bf93-20e5ab1fc169",
                  "name": "Client Host",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "clientHost",
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "clientHost",
                    "jsonType.label": "String"
                  }
                }
              ]
            },
            {
              "id": "4f622f4a-f447-47ad-9168-c051ad156763",
              "name": "saml_organization",
              "description": "Organization Membership",
              "protocol": "saml",
              "attributes": {
                "display.on.consent.screen": "false"
              },
              "protocolMappers": [
                {
                  "id": "f6b61241-6428-4ee6-8892-b04445701103",
                  "name": "organization",
                  "protocol": "saml",
                  "protocolMapper": "saml-organization-membership-mapper",
                  "consentRequired": false,
                  "config": {}
                }
              ]
            },
            {
              "id": "edb8380e-2782-4bfc-970e-c5dbd0ca46a1",
              "name": "offline_access",
              "description": "OpenID Connect built-in scope: offline_access",
              "protocol": "openid-connect",
              "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
              }
            },
            {
              "id": "2a30e253-bc63-4a12-be06-446d44a62e24",
              "name": "groups",
              "description": "",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "gui.order": "",
                "consent.screen.text": ""
              },
              "protocolMappers": [
                {
                  "id": "8a8537a3-5ee7-4a2a-a44a-4f5a35cc290b",
                  "name": "groups",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-group-membership-mapper",
                  "consentRequired": false,
                  "config": {
                    "full.path": "true",
                    "introspection.token.claim": "true",
                    "multivalued": "true",
                    "userinfo.token.claim": "true",
                    "id.token.claim": "true",
                    "lightweight.claim": "false",
                    "access.token.claim": "true",
                    "claim.name": "groups"
                  }
                }
              ]
            },
            {
              "id": "09fa2f75-5e15-43a4-989c-d2876375cc43",
              "name": "microprofile-jwt",
              "description": "Microprofile - JWT built-in scope",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
              },
              "protocolMappers": [
                {
                  "id": "23f874ed-9155-4a2e-8d2d-8742ed6cbc2f",
                  "name": "groups",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-realm-role-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "multivalued": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "foo",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "groups",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "79f0cde6-c597-4f05-8a98-745cd1847a31",
                  "name": "upn",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "username",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "upn",
                    "jsonType.label": "String"
                  }
                }
              ]
            },
            {
              "id": "b79ccc29-67d6-446e-b22a-bf1eda220c15",
              "name": "profile",
              "description": "OpenID Connect built-in scope: profile",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${profileScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "61332719-c65b-4955-9e62-169961c26b61",
                  "name": "picture",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "picture",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "picture",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "b9493d19-6fd8-439e-b672-58c19226cbb4",
                  "name": "middle name",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "middleName",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "middle_name",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "208573fe-fb94-475f-aa21-743d9fe3b8c1",
                  "name": "locale",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "locale",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "locale",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "92be7202-d047-4ebc-a27f-1486ad2a17cd",
                  "name": "updated at",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "updatedAt",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "updated_at",
                    "jsonType.label": "long"
                  }
                },
                {
                  "id": "8f80fe90-6f06-470e-88c0-814663edaf13",
                  "name": "gender",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "gender",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "gender",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "bab3c55b-4800-4d43-9729-06cfe0d308cf",
                  "name": "profile",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "profile",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "profile",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "b7eeb4f9-a7f4-4855-b0c5-2cf7c823d9c0",
                  "name": "full name",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-full-name-mapper",
                  "consentRequired": false,
                  "config": {
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true"
                  }
                },
                {
                  "id": "90365b62-36de-4502-83f4-1866c567afe9",
                  "name": "nickname",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "nickname",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "nickname",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "8f819b23-d05b-43b3-aa1f-60435e8c6af5",
                  "name": "username",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "username",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "preferred_username",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "dee059b6-824f-4bd4-aaff-48c02e880f1f",
                  "name": "family name",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "lastName",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "family_name",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "73a359f4-971d-4c4a-a8ff-86fa1489aa1d",
                  "name": "birthdate",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "birthdate",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "birthdate",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "920789a2-c154-4dc8-a4fd-fe2b1d9029f5",
                  "name": "zoneinfo",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "zoneinfo",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "zoneinfo",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "33d4195a-cd6c-4ebe-8086-33976f5e390e",
                  "name": "given name",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "firstName",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "given_name",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "e68f21f0-6afc-4763-8e1f-e42b88e95e28",
                  "name": "website",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "website",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "website",
                    "jsonType.label": "String"
                  }
                }
              ]
            },
            {
              "id": "904e30f0-d3a0-4899-82c4-5b020afdb5bf",
              "name": "web-origins",
              "description": "OpenID Connect scope for add allowed web origins to the access token",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "false",
                "consent.screen.text": "",
                "display.on.consent.screen": "false"
              },
              "protocolMappers": [
                {
                  "id": "8a8f63a9-e689-4f2b-91eb-4c9f0aa4ae71",
                  "name": "allowed web origins",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-allowed-origins-mapper",
                  "consentRequired": false,
                  "config": {
                    "access.token.claim": "true",
                    "introspection.token.claim": "true"
                  }
                }
              ]
            },
            {
              "id": "3936de63-773e-4e25-8448-0f92f31e5dbb",
              "name": "email",
              "description": "OpenID Connect built-in scope: email",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${emailScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "14655dbf-2360-4b07-8c10-d44fde7b9d22",
                  "name": "email verified",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-property-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "emailVerified",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "email_verified",
                    "jsonType.label": "boolean"
                  }
                },
                {
                  "id": "e51b995b-a4bd-4b79-9573-61d858967b1f",
                  "name": "email",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "email",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "email",
                    "jsonType.label": "String"
                  }
                }
              ]
            },
            {
              "id": "7afc240a-cc76-4508-b257-f359c073aee0",
              "name": "phone",
              "description": "OpenID Connect built-in scope: phone",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${phoneScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "3706458e-897c-46d7-8d36-ebf6ab19259b",
                  "name": "phone number",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "phoneNumber",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "phone_number",
                    "jsonType.label": "String"
                  }
                },
                {
                  "id": "b700ac72-b6d2-464b-94c0-c245d85aefe9",
                  "name": "phone number verified",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-attribute-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "user.attribute": "phoneNumberVerified",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "phone_number_verified",
                    "jsonType.label": "boolean"
                  }
                }
              ]
            },
            {
              "id": "942b144a-bbc9-439b-b35d-180ba7deec5c",
              "name": "address",
              "description": "OpenID Connect built-in scope: address",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${addressScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "3544852f-40bc-4f1f-9c83-f6c957cced9b",
                  "name": "address",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-address-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.attribute.formatted": "formatted",
                    "user.attribute.country": "country",
                    "introspection.token.claim": "true",
                    "user.attribute.postal_code": "postal_code",
                    "userinfo.token.claim": "true",
                    "user.attribute.street": "street",
                    "id.token.claim": "true",
                    "user.attribute.region": "region",
                    "access.token.claim": "true",
                    "user.attribute.locality": "locality"
                  }
                }
              ]
            },
            {
              "id": "cf21d860-0813-4092-a31c-edd4324297a7",
              "name": "basic",
              "description": "OpenID Connect scope for add all basic claims to the token",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
              },
              "protocolMappers": [
                {
                  "id": "f8468026-2400-44e1-9014-9e53522aeeff",
                  "name": "sub",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-sub-mapper",
                  "consentRequired": false,
                  "config": {
                    "access.token.claim": "true",
                    "introspection.token.claim": "true"
                  }
                },
                {
                  "id": "192579db-a204-4962-a332-f8ae54ac8443",
                  "name": "auth_time",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usersessionmodel-note-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.session.note": "AUTH_TIME",
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "auth_time",
                    "jsonType.label": "long"
                  }
                }
              ]
            },
            {
              "id": "a4c8e722-23a0-4ff8-ba0a-f604f15064b5",
              "name": "roles",
              "description": "OpenID Connect scope for add user roles to the access token",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "false",
                "consent.screen.text": "${rolesScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "304b94a8-8786-4b06-8852-8ff6bb918127",
                  "name": "audience resolve",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-audience-resolve-mapper",
                  "consentRequired": false,
                  "config": {
                    "access.token.claim": "true",
                    "introspection.token.claim": "true"
                  }
                },
                {
                  "id": "b73f0cc0-e2b3-4b21-b7eb-7f350a505409",
                  "name": "client roles",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-client-role-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.attribute": "foo",
                    "introspection.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "resource_access.${client_id}.roles",
                    "jsonType.label": "String",
                    "multivalued": "true"
                  }
                },
                {
                  "id": "01594696-e22b-447f-8526-9eeae76cb651",
                  "name": "realm roles",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-usermodel-realm-role-mapper",
                  "consentRequired": false,
                  "config": {
                    "user.attribute": "foo",
                    "introspection.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "realm_access.roles",
                    "jsonType.label": "String",
                    "multivalued": "true"
                  }
                }
              ]
            },
            {
              "id": "7c753a52-44d2-40d3-a66d-71b562e855b3",
              "name": "acr",
              "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
              },
              "protocolMappers": [
                {
                  "id": "d7d22563-e2aa-46ed-812a-8147af86b474",
                  "name": "acr loa level",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-acr-mapper",
                  "consentRequired": false,
                  "config": {
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true"
                  }
                }
              ]
            },
            {
              "id": "1fa26433-e5d0-4861-bd50-6bd28cd86bd0",
              "name": "organization",
              "description": "Additional claims about the organization a subject belongs to",
              "protocol": "openid-connect",
              "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${organizationScopeConsentText}",
                "display.on.consent.screen": "true"
              },
              "protocolMappers": [
                {
                  "id": "6499b8de-9f7a-498e-9c1f-b765bf31b2dd",
                  "name": "organization",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-organization-membership-mapper",
                  "consentRequired": false,
                  "config": {
                    "introspection.token.claim": "true",
                    "multivalued": "true",
                    "userinfo.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "organization",
                    "jsonType.label": "String"
                  }
                }
              ]
            }
          ],
          "defaultDefaultClientScopes": [
            "role_list",
            "saml_organization",
            "profile",
            "email",
            "roles",
            "web-origins",
            "acr",
            "basic",
            "groups"
          ],
          "defaultOptionalClientScopes": [
            "offline_access",
            "address",
            "phone",
            "microprofile-jwt",
            "organization"
          ],
          "browserSecurityHeaders": {
            "contentSecurityPolicyReportOnly": "",
            "xContentTypeOptions": "nosniff",
            "referrerPolicy": "no-referrer",
            "xRobotsTag": "none",
            "xFrameOptions": "SAMEORIGIN",
            "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
            "xXSSProtection": "1; mode=block",
            "strictTransportSecurity": "max-age=31536000; includeSubDomains"
          },
          "smtpServer": {},
          "eventsEnabled": false,
          "eventsListeners": [
            "jboss-logging"
          ],
          "enabledEventTypes": [],
          "adminEventsEnabled": false,
          "adminEventsDetailsEnabled": false,
          "identityProviders": [
            {
              "alias": "github",
              "displayName": "",
              "internalId": "5a7f634d-fb53-491c-a8c7-50f5f1afb55b",
              "providerId": "github",
              "enabled": true,
              "updateProfileFirstLoginMode": "on",
              "trustEmail": true,
              "storeToken": false,
              "addReadTokenRoleOnCreate": false,
              "authenticateByDefault": false,
              "linkOnly": false,
              "hideOnLogin": false,
              "firstBrokerLoginFlowAlias": "social login",
              "config": {
                "acceptsPromptNoneForwardFromClient": "false",
                "clientId": "Ov23li943a6yVEZruicm",
                "disableUserInfo": "false",
                "filteredByClaim": "false",
                "syncMode": "LEGACY",
                "clientSecret": "**********",
                "caseSensitiveOriginalUsername": "false"
              }
            },
            {
              "alias": "google",
              "internalId": "70492734-73a1-4332-8160-0ad5f915d2f5",
              "providerId": "google",
              "enabled": true,
              "updateProfileFirstLoginMode": "on",
              "trustEmail": true,
              "storeToken": false,
              "addReadTokenRoleOnCreate": false,
              "authenticateByDefault": false,
              "linkOnly": false,
              "hideOnLogin": false,
              "config": {
                "syncMode": "LEGACY",
                "clientSecret": "**********",
                "clientId": "49648312556-mpvuf5030bpt6qlqevv1lit8c3uu5b2l.apps.googleusercontent.com"
              }
            }
          ],
          "identityProviderMappers": [],
          "components": {
            "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
              {
                "id": "4ad27bde-743b-4121-91b8-4383e2999eee",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                  "host-sending-registration-request-must-match": [
                    "true"
                  ],
                  "client-uris-must-match": [
                    "true"
                  ]
                }
              },
              {
                "id": "f92f7d1e-9414-4deb-84d1-4343b6a0f63d",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                  "allowed-protocol-mapper-types": [
                    "saml-user-attribute-mapper",
                    "oidc-address-mapper",
                    "oidc-full-name-mapper",
                    "oidc-sha256-pairwise-sub-mapper",
                    "oidc-usermodel-attribute-mapper",
                    "saml-user-property-mapper",
                    "oidc-usermodel-property-mapper",
                    "saml-role-list-mapper"
                  ]
                }
              },
              {
                "id": "3da817fa-b3b4-4797-a45c-958806b093ba",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                  "allow-default-scopes": [
                    "true"
                  ]
                }
              },
              {
                "id": "65df4f69-0f57-4733-a42b-2c44cedd7a23",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                  "allowed-protocol-mapper-types": [
                    "oidc-sha256-pairwise-sub-mapper",
                    "oidc-address-mapper",
                    "oidc-full-name-mapper",
                    "oidc-usermodel-property-mapper",
                    "saml-user-property-mapper",
                    "saml-user-attribute-mapper",
                    "oidc-usermodel-attribute-mapper",
                    "saml-role-list-mapper"
                  ]
                }
              },
              {
                "id": "df6d4392-3990-46a9-9b81-42ded4265c41",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                  "allow-default-scopes": [
                    "true"
                  ]
                }
              },
              {
                "id": "487a159d-1ac2-41d8-8604-dd761d31d3fa",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
              },
              {
                "id": "2f952c3a-aee1-4424-b057-f7a304b92d22",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                  "max-clients": [
                    "200"
                  ]
                }
              },
              {
                "id": "56a9ec58-5d0e-475d-8a91-be762ef87cd1",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
              }
            ],
            "org.keycloak.userprofile.UserProfileProvider": [
              {
                "id": "471a3042-8364-4419-9160-5ee102b43020",
                "providerId": "declarative-user-profile",
                "subComponents": {},
                "config": {
                  "kc.user.profile.config": [
                    "{\"attributes\":[{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"required\":{\"roles\":[\"user\"]},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"email\":{\"max-local-length\":64}},\"annotations\":{},\"permissions\":{\"view\":[],\"edit\":[]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"annotations\":{},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
                  ]
                }
              }
            ],
            "org.keycloak.keys.KeyProvider": [
              {
                "id": "239c01ab-c8fa-4413-808b-971c1edb6c85",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {},
                "config": {
                  "priority": [
                    "100"
                  ]
                }
              },
              {
                "id": "2c482b4c-0320-4e06-bd1c-a4e585d4252b",
                "name": "hmac-generated-hs512",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                  "priority": [
                    "100"
                  ],
                  "algorithm": [
                    "HS512"
                  ]
                }
              },
              {
                "id": "9aae491b-593b-4a24-a0e3-9ed4f9c0dff1",
                "name": "rsa-enc-generated",
                "providerId": "rsa-enc-generated",
                "subComponents": {},
                "config": {
                  "priority": [
                    "100"
                  ],
                  "algorithm": [
                    "RSA-OAEP"
                  ]
                }
              },
              {
                "id": "2ecaa074-b95e-4afe-81e1-4619be46ee06",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {},
                "config": {
                  "priority": [
                    "100"
                  ]
                }
              }
            ]
          },
          "internationalizationEnabled": false,
          "supportedLocales": [],
          "authenticationFlows": [
            {
              "id": "4ecf28b6-7dd0-463f-bedc-94d6e5c9ef9c",
              "alias": "Account verification options",
              "description": "Method with which to verity the existing account",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "idp-email-verification",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "ALTERNATIVE",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "Verify Existing Account by Re-authentication",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "d04cbe54-2644-42d7-ae6c-72ca4261463b",
              "alias": "Browser - Conditional OTP",
              "description": "Flow to determine if the OTP is required for the authentication",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "auth-otp-form",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "f6282b60-67c4-4e03-8ce9-a2603f1ac8a2",
              "alias": "Browser - Conditional Organization",
              "description": "Flow to determine if the organization identity-first login is to be used",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "organization",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "9f752c73-08cf-4baf-9fdb-41d316e908ea",
              "alias": "Direct Grant - Conditional OTP",
              "description": "Flow to determine if the OTP is required for the authentication",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "direct-grant-validate-otp",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "496e06db-03d5-48c1-af42-af7f07380c49",
              "alias": "First Broker Login - Conditional Organization",
              "description": "Flow to determine if the authenticator that adds organization members is to be used",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "idp-add-organization-member",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "04370f43-63ec-4f69-8877-cb8c7f8b4136",
              "alias": "First broker login - Conditional OTP",
              "description": "Flow to determine if the OTP is required for the authentication",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "auth-otp-form",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "b9e95b3c-c355-4ef1-be17-c75e563faf71",
              "alias": "Handle Existing Account",
              "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "idp-confirm-link",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "Account verification options",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "e119389c-2637-4260-bb6c-e3c7d9e83c9f",
              "alias": "Organization",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 10,
                  "autheticatorFlow": true,
                  "flowAlias": "Browser - Conditional Organization",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "c295cb63-d1b8-4264-948b-707f1e0fe0b9",
              "alias": "Reset - Conditional OTP",
              "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "conditional-user-configured",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "reset-otp",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "c97c6089-1d25-44fa-af67-572a94c9020a",
              "alias": "User creation or linking",
              "description": "Flow for the existing/non-existing user alternatives",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticatorConfig": "create unique user config",
                  "authenticator": "idp-create-user-if-unique",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "ALTERNATIVE",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "Handle Existing Account",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "f54fe9ad-90ca-4faf-8542-4dc3b2b7e6f3",
              "alias": "Verify Existing Account by Re-authentication",
              "description": "Reauthentication of existing account",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "idp-username-password-form",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "First broker login - Conditional OTP",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "32f4a3f0-2a27-48dd-9498-f08750c089c4",
              "alias": "browser",
              "description": "Browser based authentication",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "auth-cookie",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "auth-spnego",
                  "authenticatorFlow": false,
                  "requirement": "DISABLED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "identity-provider-redirector",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 25,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "ALTERNATIVE",
                  "priority": 26,
                  "autheticatorFlow": true,
                  "flowAlias": "Organization",
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "ALTERNATIVE",
                  "priority": 30,
                  "autheticatorFlow": true,
                  "flowAlias": "forms",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "275c9fd6-adc8-4255-9c77-91b18227ec05",
              "alias": "clients",
              "description": "Base authentication for clients",
              "providerId": "client-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "client-secret",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "client-jwt",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "client-secret-jwt",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 30,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "client-x509",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 40,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "b50e942c-1892-4998-98d6-b82eb43bb7f9",
              "alias": "direct grant",
              "description": "OpenID Connect Resource Owner Grant",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "direct-grant-validate-username",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "direct-grant-validate-password",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 30,
                  "autheticatorFlow": true,
                  "flowAlias": "Direct Grant - Conditional OTP",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "c9009005-eb5a-43be-9bc0-bc4b6edf0735",
              "alias": "docker auth",
              "description": "Used by Docker clients to authenticate against the IDP",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "docker-http-basic-authenticator",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "ff647524-3aec-4e5e-a4b4-5df14fc8c889",
              "alias": "first broker login",
              "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticatorConfig": "review profile config",
                  "authenticator": "idp-review-profile",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "User creation or linking",
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 50,
                  "autheticatorFlow": true,
                  "flowAlias": "First Broker Login - Conditional Organization",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "25f00332-7dc8-4b97-90fc-59e990dfcc25",
              "alias": "forms",
              "description": "Username, password, otp and other auth forms.",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "auth-username-password-form",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "Browser - Conditional OTP",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "3e4e6725-3dd6-406c-a560-dad56d0a4a08",
              "alias": "registration",
              "description": "Registration flow",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "registration-page-form",
                  "authenticatorFlow": true,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": true,
                  "flowAlias": "registration form",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "6385d1af-acdb-4d8c-9231-441c96a178d6",
              "alias": "registration form",
              "description": "Registration form",
              "providerId": "form-flow",
              "topLevel": false,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "registration-user-creation",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "registration-password-action",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 50,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "registration-recaptcha-action",
                  "authenticatorFlow": false,
                  "requirement": "DISABLED",
                  "priority": 60,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "registration-terms-and-conditions",
                  "authenticatorFlow": false,
                  "requirement": "DISABLED",
                  "priority": 70,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "01e8fd70-7f32-4a2a-aa17-47a9488ced18",
              "alias": "reset credentials",
              "description": "Reset credentials for a user if they forgot their password or something",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "reset-credentials-choose-user",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "reset-credential-email",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticator": "reset-password",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 30,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "CONDITIONAL",
                  "priority": 40,
                  "autheticatorFlow": true,
                  "flowAlias": "Reset - Conditional OTP",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "ec2fa5bb-3ae7-48b6-ac7b-95e5fd599116",
              "alias": "saml ecp",
              "description": "SAML ECP Profile Authentication Flow",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": true,
              "authenticationExecutions": [
                {
                  "authenticator": "http-basic-authenticator",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "15d7add5-9de1-40a2-87d7-afb373aa2040",
              "alias": "social login",
              "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
              "providerId": "basic-flow",
              "topLevel": true,
              "builtIn": false,
              "authenticationExecutions": [
                {
                  "authenticatorFlow": true,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "social login User creation or linking",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "2c7086c4-e528-45e2-a537-6e29bd35f0d2",
              "alias": "social login Account verification options",
              "description": "Method with which to verity the existing account",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": false,
              "authenticationExecutions": [
                {
                  "authenticator": "idp-email-verification",
                  "authenticatorFlow": false,
                  "requirement": "REQUIRED",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "45ffbe04-8f55-480e-a016-4d69c34d3997",
              "alias": "social login Handle Existing Account",
              "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": false,
              "authenticationExecutions": [
                {
                  "authenticatorFlow": true,
                  "requirement": "REQUIRED",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "social login Account verification options",
                  "userSetupAllowed": false
                }
              ]
            },
            {
              "id": "357a4918-a044-4474-a23c-762138118870",
              "alias": "social login User creation or linking",
              "description": "Flow for the existing/non-existing user alternatives",
              "providerId": "basic-flow",
              "topLevel": false,
              "builtIn": false,
              "authenticationExecutions": [
                {
                  "authenticatorConfig": "social login create unique user config",
                  "authenticator": "idp-create-user-if-unique",
                  "authenticatorFlow": false,
                  "requirement": "ALTERNATIVE",
                  "priority": 10,
                  "autheticatorFlow": false,
                  "userSetupAllowed": false
                },
                {
                  "authenticatorFlow": true,
                  "requirement": "ALTERNATIVE",
                  "priority": 20,
                  "autheticatorFlow": true,
                  "flowAlias": "social login Handle Existing Account",
                  "userSetupAllowed": false
                }
              ]
            }
          ],
          "authenticatorConfig": [
            {
              "id": "13b62662-7327-4b8a-b712-6563f195754c",
              "alias": "create unique user config",
              "config": {
                "require.password.update.after.registration": "false"
              }
            },
            {
              "id": "36598382-df33-429f-982b-5cd58c3436cd",
              "alias": "review profile config",
              "config": {
                "update.profile.on.first.login": "missing"
              }
            },
            {
              "id": "4e59245d-7cd5-4d1c-b880-948c2c98ea19",
              "alias": "social login create unique user config",
              "config": {
                "require.password.update.after.registration": "false"
              }
            }
          ],
          "requiredActions": [
            {
              "alias": "CONFIGURE_TOTP",
              "name": "Configure OTP",
              "providerId": "CONFIGURE_TOTP",
              "enabled": true,
              "defaultAction": false,
              "priority": 10,
              "config": {}
            },
            {
              "alias": "TERMS_AND_CONDITIONS",
              "name": "Terms and Conditions",
              "providerId": "TERMS_AND_CONDITIONS",
              "enabled": false,
              "defaultAction": false,
              "priority": 20,
              "config": {}
            },
            {
              "alias": "UPDATE_PASSWORD",
              "name": "Update Password",
              "providerId": "UPDATE_PASSWORD",
              "enabled": true,
              "defaultAction": false,
              "priority": 30,
              "config": {}
            },
            {
              "alias": "UPDATE_PROFILE",
              "name": "Update Profile",
              "providerId": "UPDATE_PROFILE",
              "enabled": true,
              "defaultAction": false,
              "priority": 40,
              "config": {}
            },
            {
              "alias": "VERIFY_EMAIL",
              "name": "Verify Email",
              "providerId": "VERIFY_EMAIL",
              "enabled": true,
              "defaultAction": false,
              "priority": 50,
              "config": {}
            },
            {
              "alias": "delete_account",
              "name": "Delete Account",
              "providerId": "delete_account",
              "enabled": false,
              "defaultAction": false,
              "priority": 60,
              "config": {}
            },
            {
              "alias": "webauthn-register",
              "name": "Webauthn Register",
              "providerId": "webauthn-register",
              "enabled": true,
              "defaultAction": false,
              "priority": 70,
              "config": {}
            },
            {
              "alias": "webauthn-register-passwordless",
              "name": "Webauthn Register Passwordless",
              "providerId": "webauthn-register-passwordless",
              "enabled": true,
              "defaultAction": false,
              "priority": 80,
              "config": {}
            },
            {
              "alias": "VERIFY_PROFILE",
              "name": "Verify Profile",
              "providerId": "VERIFY_PROFILE",
              "enabled": true,
              "defaultAction": false,
              "priority": 90,
              "config": {}
            },
            {
              "alias": "delete_credential",
              "name": "Delete Credential",
              "providerId": "delete_credential",
              "enabled": true,
              "defaultAction": false,
              "priority": 100,
              "config": {}
            },
            {
              "alias": "update_user_locale",
              "name": "Update User Locale",
              "providerId": "update_user_locale",
              "enabled": true,
              "defaultAction": false,
              "priority": 1000,
              "config": {}
            }
          ],
          "browserFlow": "browser",
          "registrationFlow": "registration",
          "directGrantFlow": "direct grant",
          "resetCredentialsFlow": "reset credentials",
          "clientAuthenticationFlow": "clients",
          "dockerAuthenticationFlow": "docker auth",
          "firstBrokerLoginFlow": "first broker login",
          "attributes": {
            "cibaBackchannelTokenDeliveryMode": "poll",
            "cibaAuthRequestedUserHint": "login_hint",
            "clientOfflineSessionMaxLifespan": "0",
            "oauth2DevicePollingInterval": "5",
            "clientSessionIdleTimeout": "0",
            "clientOfflineSessionIdleTimeout": "0",
            "cibaInterval": "5",
            "realmReusableOtpCode": "false",
            "cibaExpiresIn": "120",
            "oauth2DeviceCodeLifespan": "600",
            "parRequestUriLifespan": "60",
            "clientSessionMaxLifespan": "0",
            "frontendUrl": "",
            "acr.loa.map": "{}"
          },
          "keycloakVersion": "26.1.4",
          "userManagedAccessAllowed": false,
          "organizationsEnabled": false,
          "verifiableCredentialsEnabled": false,
          "adminPermissionsEnabled": false,
          "clientProfiles": {
            "profiles": []
          },
          "clientPolicies": {
            "policies": []
          }
        }
