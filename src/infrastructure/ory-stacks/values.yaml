kratosdb:
  fullnameOverride: kratosdb
  architecture: standalone
  auth:
    username: kratos  
    database: kratos
    existingSecret: postgresql-secret
    secretKeys:      
      userPasswordKey: password
      adminPasswordKey: admin-password
      replicationPasswordKey: replication-password
  primary:    
    nodeSelector: 
      kubernetes.io/hostname: node1
    persistence:
      size: 1Gi
      storageClass: local-path
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 750m
        memory: 768Mi

hydradb:
  fullnameOverride: hydradb
  architecture: standalone
  auth:
    username: hydra  
    database: hydra
    existingSecret: postgresql-secret
    secretKeys:      
      userPasswordKey: password
      adminPasswordKey: admin-password
      replicationPasswordKey: replication-password
  primary:    
    nodeSelector: 
      kubernetes.io/hostname: node1
    persistence:
      size: 1Gi
      storageClass: local-path
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 750m
        memory: 768Mi

kratos:
  fullnameOverride: kratos
  replicas: 1
  nodeSelector: 
    kubernetes.io/hostname: node1
  kratos:
    config:
      identity:
        default_schema_id: default
        schemas:
          - id: default
            url: file:///etc/config/identity.default.schema.json
      selfservice:
        default_browser_return_url: https://accounts.ecoma.io/
        flows:
          login:
            ui_url: "https://accounts.ecoma.io/login"
          registration:
            ui_url: "https://accounts.ecoma.io/register"
          recovery:
            ui_url: "https://accounts.ecoma.io/recovery"
          verification:
            ui_url: "https://accounts.ecoma.io/verification"
          settings:
            ui_url: "https://accounts.ecoma.io/settings"
    automigration:
      enabled: true
    identitySchemas:
      "identity.default.schema.json": |
        {
          "$id": "https://schemas.ory.sh/presets/kratos/identity.email.schema.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Person",
          "type": "object",
          "properties": {
            "traits": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "title": "E-Mail",
                  "ory.sh/kratos": {
                    "credentials": {
                      "password": {
                        "identifier": true
                      }
                    },
                    "recovery": {
                      "via": "email"
                    },
                    "verification": {
                      "via": "email"
                    }
                  }
                }
              },
              "required": [
                "email"
              ],
              "additionalProperties": false
            }
          }
        }
  deployment:
    extraEnv:
      - name: DSN
        valueFrom:
          secretKeyRef:
            name: kratos-secret
            key: dsn
  statefulSet:
    extraEnv:
      - name: DSN
        valueFrom:
          secretKeyRef:
            name: kratos-secret
            key: dsn
  job:
    extraEnv:
      - name: DSN
        valueFrom:
          secretKeyRef:
            name: kratos-secret
            key: dsn
  cronjob:
    cleanup:
      extraEnv:
        - name: DSN
          valueFrom:
            secretKeyRef:
              name: kratos-secret
              key: dsn
  secret:
    enabled: false
    nameOverride: kratos-secret
  ingress:
    public:
      enabled: true
      className: traefik
      annotations:
        cert-manager.io/cluster-issuer: cluster-issuer
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      hosts:
        - host: authenticate.ecoma.io
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - secretName: kratos-tls
          hosts:
            - authenticate.ecoma.io
    admin:
      enabled: true
      className: traefik      
      annotations:
        cert-manager.io/cluster-issuer: cluster-issuer
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      hosts:
        - host: authenticate-admin.ecoma.io
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
        - secretName: kratos-admin-tls
          hosts:
            - authenticate-admin.ecoma.io  

kratos-ui:
  fullnameOverride: accounts-ui
  config:
    csrfCookieName: __HOST-accounts.ecoma.io-x-csrf-token
  secret:
    enabled: false
    nameOverride: accounts-ui-secret
  kratosPublicUrl: "http://kratos-public.ory.svc.cluster.local"
  kratosAdminUrl: "http://kratos-admin.ory.svc.cluster.local"
  kratosBrowserUrl: "https://authenticate.ecoma.io"
  # jwksUrl: "http://oathkeeper-api"
  ingress:
    enabled: true
    className: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      cert-manager.io/cluster-issuer: cluster-issuer
    hosts:
      - host: accounts.ecoma.io
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
    - hosts:
        - accounts.ecoma.io
      secretName: accounts-ui-tls
  
hydra-maester:
  fullnameOverride: hydra-maester

hydra:
  fullnameOverride: hydra
  config:
    urls:
      self:
        issuer: "https://authorize.ecoma.io/"
        login: "https://accounts.ecoma.io/login"
        consent: "https://accounts.ecoma.io/consent"
        logout: "https://accounts.ecoma.io/logout"
  secret:
    enabled: false
    nameOverride: hydra-secret
  deployment:
    extraEnv:
      - name: DSN
        valueFrom:
          secretKeyRef:
            name: kratos-secret
            key: dsn
  ingress:
    public:
      enabled: true
      className: traefik
      annotations:
        cert-manager.io/cluster-issuer: cluster-issuer
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      hosts:
        - host: authorize.ecoma.io
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
      - hosts:
          - authorize.ecoma.io
        secretName: hydra-tls
    admin:
      enabled: true
      className: traefik
      annotations:
        cert-manager.io/cluster-issuer: cluster-issuer
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
      hosts:
        - host: authorize-admin.ecoma.io
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls:
      - hosts:
          - authorize-admin.ecoma.io
        secretName: hydra-admin-tls 