postgresql:
  fullnameOverride: postgresql
  architecture: standalone
  auth:
    username: keycloak  
    database: keycloak
    existingSecret: keycloak-secret
    secretKeys:
      adminPasswordKey: postgresql-admin-password
      userPasswordKey: postgresql-password
      replicationPasswordKey: postgresql-replication-password
  primary:    
    nodeSelector: 
      kubernetes.io/hostname: node1
    persistence:
      size: 1Gi
      storageClass: local-path
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 750m
        memory: 768Mi

keycloak:
  fullnameOverride: keycloak
  nodeSelector: 
    kubernetes.io/hostname: node1
  auth:
    adminUser: "admin"
    existingSecret: keycloak-secret
    passwordSecretKey: admin-password 
  postgresql:
    enabled: false
  externalDatabase:
    existingSecret: keycloak-secret  
    existingSecretHostKey: postgresql-host
    existingSecretPortKey: postgresql-port
    existingSecretUserKey: postgresql-username
    existingSecretDatabaseKey: postgresql-database
    existingSecretPasswordKey: postgresql-password
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 750m
      memory: 768Mi
  adminRealm: master
  proxy: edge
  logging: #FATAL, ERROR, WARN, INFO, DEBUG, TRACE, ALL, OFF
    output: default
    level: DEBUG
  keycloakConfigCli:
    enabled: true
    cleanupAfterFinished:
      enabled: true
      seconds: 60
    configuration: 
      master.json: |
        {
          "realm": "master",
          "enabled": true,
          "displayName": "Ecoma",
          "registrationAllowed": true,
          "registrationEmailAsUsername": true,
          "verifyEmail": true,
          "resetPasswordAllowed": true,
          "rememberMe": true,
          "defaultRoles": [
            "offline_access",
            "uma_authorization"
          ],
          "roles": {
            "client": {
              "argo-cd": [
                {
                  "name": "admin",
                  "clientRole": true,
                  "description": "System admins",
                  "composite": false,
                },
                {
                  "name": "developers",
                  "clientRole": true,
                  "description": "Developers",
                  "composite": false,
                }
              ],
              "headlamp": [
                {
                  "name": "admin",
                  "clientRole": true,
                  "description": "System admins",
                  "composite": false,
                },
                {
                  "name": "developers",
                  "clientRole": true,
                  "description": "Developers",
                  "composite": false,
                }
              ]
            }
          },
          "identityProviders": [
            {
              "alias": "github",
              "providerId": "github",
              "enabled": true,
              "trustEmail": true,
              "firstBrokerLoginFlowAlias": "first broker login",
              "config": {
                "syncMode": "IMPORT",
                "clientId": "$(env:GITHUB_CLIENT_ID)",
                "clientSecret": "$(env:GITHUB_CLIENT_SECRET)",
                "defaultScope": "openid email profile",
                "prompt": "none"
              }
            },
            {
              "alias": "google",
              "providerId": "google",
              "enabled": true,
              "trustEmail": true,
              "firstBrokerLoginFlowAlias": "first broker login",
              "config": {
                "syncMode": "IMPORT",
                "clientId": "$(env:GOOGLE_CLIENT_ID)",
                "clientSecret": "$(env:GOOGLE_CLIENT_SECRET)",
                "defaultScope": "openid email profile",
                "prompt": "none"
              }
            }
          ],          
          "users": [
            {
              "username": "john.itvn@gmail.com", 
              "email": "john.itvn@gmail.com"           
              "enabled": true,              
              "realmRoles": [ "admin" ],
              "clientRoles": { 
                "argo-cd": [ "admin" ],
                "headlamp": [ "admin" ]
              }
            }
          ],
          "clients": [
            {
              "clientId": "argo-cd",
              "name": "ArgoCD",
              "enabled": true,
              "clientAuthenticatorType": "client-secret",
              "secret": "$(env:ARGOCD_CLIENT_SECRET)",
              "redirectUris": [
                "https://argocd.ecoma.io/*"
              ],
              "webOrigins": [
                "https:///argocd.ecoma.io"
              ],
              "protocol": "openid-connect",
              "access": {
                "view": true,
                "configure": false,
                "manage": true
              }              
            },
            {
              "clientId": "headlamp",
              "name": "Headpamp",
              "enabled": true,
              "clientAuthenticatorType": "client-secret",
              "secret": "$(env:ARGOCD_CLIENT_SECRET)",
              "redirectUris": [
                "https://headlamp.ecoma.io/*"
              ],
              "webOrigins": [
                "https:///headlamp.ecoma.io"
              ],
              "protocol": "openid-connect",
              "access": {
                "view": true,
                "configure": false,
                "manage": true
              }              
            }
          ]
        }         
    extraEnvVars:
      - name: ARGOCD_CLIENT_SECRET
        value: test-secret 
      - name: IMPORT_VARSUBSTITUTION_ENABLED
        value: "true" 
      - name: GOOGLE_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: keycloak-secret
            key: google-client-id
      - name: GOOGLE_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: keycloak-secret
            key: google-client-secret
      - name: GITHUB_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: keycloak-secret
            key: github-client-id
      - name: GITHUB_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: keycloak-secret
            key: github-client-secret
  ingress:
    enabled: true
    ingressClassName: traefik
    hostname: accounts.ecoma.io
  adminIngress:
    enabled: true
    ingressClassName: traefik
    hostname: keycloak.ecoma.io   